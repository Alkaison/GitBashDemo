▷ git status
--it is used to check whether the current directory is a git repository or not.

▷ git config --global user.name "Alvin J. Alexander"
--it is used to set username of the user in Git Bash.

▷ git config --global user.email example@mail.com
--it is used to set Email Address of the user in Git Bash.

▷ git config user.name
--it is used to view the Username of the user in Git Bash.

▷ git config user.email
--it is used to view the Email address of the user in Git Bash.

▷ git init
--it is used to create or to define the currently opened path as git repository in Git Bash.

▷ git add --add
--it is used to add all the available files of the current path to track there changes.

▷ git status
--again use it to check whether all files are tracking properly or not

▷ git commit -m "Initial commit"
--it is used to commit the files to the repository.

▷ git log
--it is used to log all the commits made.

▷ q
-- it is used to exit the git logs viewing screen. when sometimes the Git Bash console gets laggy.

▷ git add main.txt
--it is used to commit a single file and push it to staging area.

▷ rm -rf .git
--it is used to delete the current repository and deletes the logs,commits. Use it only when you want to delete the repo.

▷ touch error.log
--it is used to create a new file 'touch' command.

▷ git diff
--it is used to check the difference between the files in staging area and modified.

▷ git diff --staged
--it is used to compare the files in current staging area with last commit.

▷ touch .gitignore
--it is used to create the file gitignore to ignore tracking of unwanted files or folder.

▷ git commit -a -m "Direct Commit Command"
--it is used to commit the files directly which are modified, it doesn't commits files which are untracked.

▷ git rm first.txt
--it is used to remove/delete file from repository.

▷ git mv first.txt first_renamed.txt
--it is used to rename a file from repository.

▷ git rm --cached first.txt
--it is used when a file is added into gitignore but still 'git status' is tracking its changes. Its used to stop tracking of the file.

▷ git clone <URL> <NAME>
--it is used to clone a repository from github. (NAME - is optional).

▷ git log -p
--it is used to view what changes are made with the commits (proper changed lines context).

▷ git log -p -3
--it is used to view last 3 commits with there proper changes in the commits like previous cmd.

▷ git log --stat
--it is used to view the commit changes in summaries/short way.

▷ git log --pretty=oneline
--it is used to view all the commit changes in 1 line.

▷ git log --pretty=short
--it is used to view all the commit changes in short & pretty way.

▷ git log --pretty=full
--it is used to view all the commit changes with commit & author name.

▷ git log --since=2.days
▷ git log --since=2.weeks
▷ git log --since=2.months
▷ git log --since=2.years
--it is used to view the commits of last 2 days, weeks, months, years.

▷ git log --pretty=format:"Enter format here"
--it is used to print the log in specific format and to understand the commits. (https://git-scm.com/docs/pretty-formats).
--All the formats are listed on the link for easy understanding.

▷ git commit --amend
--it is used to edit the last commit message and commit the current staged files.

▷ git restore --staged first.txt
--it is used to unstage your files from staging area. (it will discard all your changes, so use it carefully).

▷ git checkout -- first.txt
--it is used to restore the file from last commit in case you missed something wrong with current file.

▷ git checkout -f
--it is used to delete current working repository and restore all the files from last commit.

▷ git remote add origin <URL from Github>
--it is used to connect/add new github repository with git and existing files on your system.

▷ git remote 
--it is used to list all remote origins.

▷ git remote -v
--it is used to list all remotes with there links and functionality.

▷▷▷ Github SSH Key connection between Git Bash & Github repository ▷▷▷

▷ ls -al ~/.ss
--it is used to check if theres existing SSH Keys on the system.

▷ ssh-keygen -t ed25519 -C "your_email@example.com"
--it is used to generate new SSH Keys on the system & press ENTER till its done. (Change the email address with verified email on github).

▷ eval "$(ssh-agent -s)"
--it is used to check pid of the SSH Keys.

▷ ssh-add ~/.ssh/id_ed25519
--it is used to add the SSH Keys to the repository on your personal system. (Make sure the Git Bash is opened in the working repository).

▷ tail ~/.ssh/id_ed25519.pub
--it is used to view the SSH Keys on terminal and copy it.

▷ git branch -M main
--it is used to define the current working directory as main branch directory.

▷ git push -u origin main
--it is used to push the files on the new github repository.

▷▷▷ Ended configuration part for GitBash & GitHub ▷▷▷

▷ git config --global alias.st status
--it is used to set alias for git commands. (here we have set alias for 'Git Status' as 'Git st').

▷ git config --global alias.unstage 'restore --staged --'
--it is used to set alias of a multiple word command. (-- this sign is used in alias to replace the file name which you will enter while using alias).
--Example: "git unstage text.txt" -->> this will set the file name "test.txt" at the place of (--) this sign in alias as "git restore --staged test.txt".

▷ git checkout -b develop
--it is used to make a new branch and start working parallely in it.

▷ git branch
--it is used to view list of all available branches in repository.

▷ git checkout master
--it is used to change branch from develop to master.

▷ git push -u origin develop
--it is used to push develop branch files to github repository.

▷ git merge develop --(be in origin/main branch to run this command)
--it is used to merge develop with main branch & final results with be seen in main branch.

▷ git branch -v 
--it is used to view the branches name and there last commit messages.

▷ git branch --merged
--it is used to view the branches which are already merged.

▷ git branch --no-merged
--it is used to view the branches which are not merged yet.

▷ git branch -d develop
--it is used to delete the branch and its files. (it gives warning if the branch is not merged yet).
--use "git branch -D develop" to delete the branch which is not merged yet & with no errrors.

▷ git push -d origin develop
--it is used to delete branch from remote repository (github).
--use "git push -D origin develop" to delete the branch which is not merged yet & with no errrors.

▷▷▷ Complete Git & GitBash Commands list. Full GitBash Course Done ✅ ▷▷▷